name: Update Hardcoded Fabric Api Versions

on:
  push:
    branches:
      - main 
  schedule:
    - cron: '0 0 * * *'

jobs:
  run_script_and_commit:
    runs-on: ubuntu-latest

    permissions:
      contents: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          ref: main
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest

      - name: Install dependencies
        run: bun i

      - name: Run the script
        run: bun getFabricApiVersions.js

      - name: Move generated assets
        run: |
          mkdir -p temp-assets
          mv site/libs/fabric.net/Api.js temp-assets/Api.js

      - name: Checkout 'generated' branch
        uses: actions/checkout@v4
        with:
          ref: generated
          path: generated
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Copy generated assets into the 'generated' branch directory
        run: |
          mkdir generated/libs/fabric.net -p
          mv temp-assets/Api.js generated/libs/fabric.net/Api.js

      - name: Check for changes and commit
        id: git-check
        run: |
          cd generated
          git config user.name "GitHub Actions"
          git config user.email "github-actions@users.noreply.github.com"
          git add "libs/fabric.net/Api.js" -f
          if ! git diff --cached --exit-code; then
            RETRY_COUNT=0
            MAX_RETRIES=5
            SUCCESS=false

            while [ "$RETRY_COUNT" -lt "$MAX_RETRIES" ]; do
              COMMIT_MESSAGE="Chore: Update hardcoded fabric api versions"

              git commit -m "$COMMIT_MESSAGE" || {
                echo "Commit failed, possibly no changes after rebase or concurrent commit. Retrying."
                git pull --rebase origin generated
                git add "libs/fabric.net/Api.js" -f
              }

              if git push origin generated; then
                echo "Successfully pushed changes."
                SUCCESS=true
                break
              else
                echo "Push failed, retrying ($((RETRY_COUNT+1))/$MAX_RETRIES)..."
                git pull --rebase origin generated
                RETRY_COUNT=$((RETRY_COUNT+1))
              fi
              sleep 2
            done

            if [ "$SUCCESS" = "true" ]; then
              echo "::set-output name=committed::true"
            else
              echo "Failed to push changes after $MAX_RETRIES retries."
              exit 1
            fi
          else
            echo "No changes to commit."
            echo "::set-output name=committed::false"
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}